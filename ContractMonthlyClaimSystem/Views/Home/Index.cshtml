@model ContractMonthlyClaimSystem.Models.ViewModels.DashboardViewModel
@{
    // The existing method to get the user role is preserved for clarity,
    // though the built-in 'User.IsInRole()' is often cleaner for conditional checks.
    var userRole = Context.User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value;
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid mt-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h1 class="display-4">
                <i class="fas fa-tachometer-alt me-3 text-primary"></i>Dashboard
            </h1>
            <p class="lead text-muted">Welcome to the Contract Monthly Claim System</p>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row g-4 mb-4">
        @if (User.IsInRole("Lecturer"))
        {
            <div class="col-lg-3 col-md-6">
                <div class="card text-white bg-primary shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title">Total Claims</h5>
                                <h2 class="card-text">@Model.TotalClaims</h2>
                            </div>
                            <div class="align-self-center"><i class="fas fa-clipboard-list fa-3x opacity-50"></i></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card text-white bg-warning shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title">Pending</h5>
                                <h2 class="card-text">@Model.PendingClaims</h2>
                            </div>
                            <div class="align-self-center"><i class="fas fa-clock fa-3x opacity-50"></i></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card text-white bg-success shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title">Approved</h5>
                                <h2 class="card-text">@Model.ApprovedClaims</h2>
                            </div>
                            <div class="align-self-center"><i class="fas fa-check-circle fa-3x opacity-50"></i></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card text-white bg-info shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title">Total Amount</h5>
                                <h2 class="card-text">@Model.TotalAmount.ToString("C")</h2>
                            </div>
                            <div class="align-self-center"><i class="fas fa-dollar-sign fa-3x opacity-50"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (User.IsInRole("ProgrammeCoordinator") || User.IsInRole("AcademicManager"))
        {
            <div class="col-lg-4 col-md-6">
                <div class="card text-white bg-warning shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title">Pending Approvals</h5>
                                <h2 class="card-text">@Model.PendingApprovals</h2>
                                <a href="@Url.Action("Pending", "Claim")" class="btn btn-sm btn-light mt-2">Review Claims <i class="fas fa-arrow-right"></i></a>
                            </div>
                            <div class="align-self-center"><i class="fas fa-hourglass-half fa-3x opacity-50"></i></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6">
                <div class="card text-white bg-success shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title">Total Approved Claims</h5>
                                <h2 class="card-text">@Model.ApprovedClaims</h2>
                            </div>
                            <div class="align-self-center"><i class="fas fa-check-double fa-3x opacity-50"></i></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-12">
                <div class="card text-white bg-primary shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title">Total System Amount</h5>
                                <h2 class="card-text">@Model.TotalAmount.ToString("C")</h2>
                            </div>
                            <div class="align-self-center"><i class="fas fa-money-bill-wave fa-3x opacity-50"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @* --- *@

    <div class="row g-4">
        <div class="@(User.IsInRole("Lecturer") ? "col-12" : "col-lg-8")">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0"><i class="fas fa-history me-2 text-primary"></i>Recent Claims</h5>
                </div>
                <div class="card-body">
                    @if (Model.RecentClaims != null && Model.RecentClaims.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover align-middle">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        @if (!User.IsInRole("Lecturer"))
                                        {
                                            <th>Lecturer</th>
                                        }
                                        <th>Amount</th>
                                        <th>Status</th>
                                        <th>Submitted</th>
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var claim in Model.RecentClaims)
                                    {
                                        <tr>
                                            <td><strong>#@claim.ClaimId</strong></td>
                                            @if (!User.IsInRole("Lecturer"))
                                            {
                                                <td>@claim.LecturerName</td>
                                            }
                                            <td>@claim.TotalAmount.ToString("C")</td>
                                            <td>
                                                <span class="badge rounded-pill bg-@GetStatusBadgeClass(claim.Status)">
                                                    @claim.Status
                                                </span>
                                            </td>
                                            <td>@claim.SubmissionDate.ToString("MMM dd, yyyy")</td>
                                            <td class="text-center">
                                                <a href="@Url.Action("Details", "Claim", new { id = claim.ClaimId })"
                                                   class="btn btn-sm btn-outline-primary" title="View Details">
                                                    <i class="fas fa-eye"></i> View
                                                </a>
                                                @* Show quick approve/reject only if current claim is awaiting my approval and user has the role *@
                                                @if ((User.IsInRole("ProgrammeCoordinator") || User.IsInRole("AcademicManager")) && claim.CanApprove)
                                                {
                                                    <a href="@Url.Action("Approve", "Claim", new { id = claim.ClaimId })"
                                                       class="btn btn-sm btn-outline-success ms-1" title="Approve">
                                                        <i class="fas fa-check"></i>
                                                    </a>
                                                    <a href="@Url.Action("Reject", "Claim", new { id = claim.ClaimId })"
                                                       class="btn btn-sm btn-outline-danger ms-1" title="Reject">
                                                        <i class="fas fa-times"></i>
                                                    </a>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="text-center mt-3">
                            <a href="@Url.Action("Index", "Claim")" class="btn btn-outline-secondary">
                                <i class="fas fa-list me-1"></i>View All Claims
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-4x text-muted mb-3"></i>
                            <h5 class="text-muted">No Recent Claims Found</h5>
                            <p class="text-muted">@(User.IsInRole("Lecturer") ? "Get started by submitting your first claim." : "The system currently has no claims to display.")</p>
                            @if (User.IsInRole("Lecturer"))
                            {
                                <a href="@Url.Action("Create", "Claim")" class="btn btn-primary mt-2">
                                    <i class="fas fa-plus me-1"></i>Submit a New Claim
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="@(User.IsInRole("Lecturer") ? "col-12" : "col-lg-4")">

            @* Quick Actions Card (Always Visible) *@
            <div class="card shadow-sm mb-4 h-auto">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0"><i class="fas fa-bolt me-2 text-info"></i>Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (User.IsInRole("Lecturer"))
                        {
                            <a href="@Url.Action("Create", "Claim")" class="btn btn-primary btn-lg">
                                <i class="fas fa-plus me-1"></i>Submit New Claim
                            </a>
                            <a href="@Url.Action("Index", "Claim")" class="btn btn-outline-primary">
                                <i class="fas fa-list-alt me-1"></i>View My Claims
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("Pending", "Claim")" class="btn btn-warning btn-lg">
                                <i class="fas fa-clock me-1"></i>Review Pending (@Model.PendingApprovals)
                            </a>
                            <a href="@Url.Action("Index", "Claim")" class="btn btn-outline-primary">
                                <i class="fas fa-search me-1"></i>View All Claims
                            </a>
                        }
                    </div>
                </div>
            </div>

            @* Claims Awaiting My Approval Card (For Reviewers Only) *@
            @if (!User.IsInRole("Lecturer"))
            {
                if (Model.ClaimsAwaitingMyApproval != null && Model.ClaimsAwaitingMyApproval.Any())
                {
                    <div class="card border-warning shadow-sm">
                        <div class="card-header bg-warning text-white">
                            <h5 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>Awaiting My Approval (@Model.ClaimsAwaitingMyApproval.Count)</h5>
                        </div>
                        <div class="card-body">
                            <ul class="list-group list-group-flush">
                                @foreach (var claim in Model.ClaimsAwaitingMyApproval.Take(5))
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <div>
                                            <strong>#@claim.ClaimId</strong> - @claim.LecturerName<br>
                                            <span class="text-success fw-bold">@claim.TotalAmount.ToString("C")</span>
                                        </div>
                                        <a href="@Url.Action("Details", "Claim", new { id = claim.ClaimId })"
                                           class="btn btn-sm btn-warning" title="Review Claim">
                                            <i class="fas fa-arrow-right"></i>
                                        </a>
                                    </li>
                                }
                            </ul>
                            <div class="text-center mt-3">
                                <a href="@Url.Action("Pending", "Claim")" class="btn btn-outline-warning btn-sm">
                                    View All Pending
                                </a>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="card border-success shadow-sm">
                        <div class="card-header bg-success text-white">
                            <h5 class="mb-0"><i class="fas fa-check-circle me-2"></i>Approval Status</h5>
                        </div>
                        <div class="card-body text-center py-4">
                            <i class="fas fa-check fa-3x text-success mb-3"></i>
                            <h5 class="text-success">All Caught Up!</h5>
                            <p class="text-muted mb-0">No claims are currently awaiting your approval.</p>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@functions {
    /**
     * Helper function to return the Bootstrap color class for a claim status.
     * Note: Uses Bootstrap 5 `bg-` prefixes.
     */
    string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "draft" => "secondary",
            "submitted" => "primary",
            "pending" => "warning", // Changed to warning for visibility
            "underreview" => "info",
            "approved" => "success",
            "rejected" => "danger",
            "paid" => "dark", // Changed to a darker color for 'paid'
            _ => "secondary"
        };
    }
}